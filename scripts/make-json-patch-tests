#!/usr/bin/env node

'use strict'

var path = require('path')
var fs = require('fs')

var DIR = path.join(__dirname, '..', 'test/json-patch-tests')
var FILES = ['spec_tests', 'tests']

var HEADER = [
  "/*",
  "   DO NOT EDIT",
  "   generated by scripts/make-json-patch-tests",
  "*/\n",
  "'use strict'\n",
  "var assert = require('assert')",
  "var patch = require('../lib/patch')",
  "var apply = patch.patch",
  "var revert = patch.revert",
  "var clone = require('json8-core').clone\n",
  "describe('json-patch/json-patch-tests', function() {\n"
].join('\n')
var FOOTER = '\n})\n'

var body = HEADER
var tests = []

FILES.forEach(function(name) {
  require(path.join(DIR, name + '.json')).forEach(function(test) {
    tests.push(test)
  })
})

tests.forEach(function(test) {
  if (test.disabled)
    return

  if (!test.error && !test.expected)
    return

  body += "describe(\"" + (test.comment ? test.comment : 'no description') + "\", function() {\n"

  if (test.error) {
    body += [
      "it('throws an error', function() {",
      "  var test = " + JSON.stringify(test),
      "  assert.throws(function() {",
      "    apply(clone(test.doc), test.patch)",
      "  })",
      "})",
      "\n",
      "it('reverts the document to its original state if an error was thrown', function() {",
      "  var test = " + JSON.stringify(test),
      "  var doc = clone(test.doc)",
      "  assert.throws(function() {",
      "    apply(doc, test.patch)",
      "  })",
      "  assert.deepEqual(doc, test.doc)",
      "})"
    ].join('\n')
  }
  else {
    body += [
      "it('applies the patch', function() {",
      "  var test = " + JSON.stringify(test),
      "  var r = apply(test.doc, test.patch)",
      "  assert.deepEqual(r, test.expected)",
      "})",
      "\n",
      "it('reverts the patch', function() {",
      "  var test = " + JSON.stringify(test),
      "  var doc = clone(test.doc)",
      "  var r = apply(doc, test.patch, {reversible: true})",
      "  assert.deepEqual(revert(r[0], r[1]), test.doc)",
      "})"
    ].join('\n')
  }

  body += "\n})\n"
})

body += FOOTER

fs.writeFileSync(path.join(__dirname, '..', 'test', 'json-patch-tests.js'), body)
